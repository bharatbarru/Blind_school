{"ast":null,"code":"app.get('/student/:admissionNumber', (req, res) => {\n  const {\n    admissionNumber\n  } = req.params;\n  const studentQuery = 'SELECT * FROM students WHERE admissionNumber = ?';\n  const certificateQuery = 'SELECT * FROM certificates WHERE admissionNumber = ?';\n\n  // Fetch student information and certificates\n  db.query(studentQuery, [admissionNumber], (err, studentResults) => {\n    if (err) {\n      console.error('Error fetching student information:', err); // Log error\n      res.status(500).send('Error fetching student information.');\n      return;\n    }\n    if (studentResults.length === 0) {\n      res.status(404).send('Student not found.'); // Return 404 if no student found\n      return;\n    }\n    db.query(certificateQuery, [admissionNumber], (err, certificateResults) => {\n      if (err) {\n        console.error('Error fetching certificate information:', err); // Log error\n        res.status(500).send('Error fetching certificate information.');\n        return;\n      }\n      res.json({\n        student: studentResults[0],\n        // Return the first student\n        certificates: certificateResults // Return the list of certificates\n      });\n    });\n  });\n});","map":{"version":3,"names":["app","get","req","res","admissionNumber","params","studentQuery","certificateQuery","db","query","err","studentResults","console","error","status","send","length","certificateResults","json","student","certificates"],"sources":["C:/Users/DELL/OneDrive/Desktop/bschool1/frontend/src/components/PersonDetailsPage.js"],"sourcesContent":["app.get('/student/:admissionNumber', (req, res) => {\r\n  const { admissionNumber } = req.params;\r\n\r\n  const studentQuery = 'SELECT * FROM students WHERE admissionNumber = ?';\r\n  const certificateQuery = 'SELECT * FROM certificates WHERE admissionNumber = ?';\r\n\r\n  // Fetch student information and certificates\r\n  db.query(studentQuery, [admissionNumber], (err, studentResults) => {\r\n    if (err) {\r\n      console.error('Error fetching student information:', err); // Log error\r\n      res.status(500).send('Error fetching student information.');\r\n      return;\r\n    }\r\n\r\n    if (studentResults.length === 0) {\r\n      res.status(404).send('Student not found.'); // Return 404 if no student found\r\n      return;\r\n    }\r\n\r\n    db.query(certificateQuery, [admissionNumber], (err, certificateResults) => {\r\n      if (err) {\r\n        console.error('Error fetching certificate information:', err); // Log error\r\n        res.status(500).send('Error fetching certificate information.');\r\n        return;\r\n      }\r\n\r\n      res.json({\r\n        student: studentResults[0], // Return the first student\r\n        certificates: certificateResults, // Return the list of certificates\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"AAAAA,GAAG,CAACC,GAAG,CAAC,2BAA2B,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjD,MAAM;IAAEC;EAAgB,CAAC,GAAGF,GAAG,CAACG,MAAM;EAEtC,MAAMC,YAAY,GAAG,kDAAkD;EACvE,MAAMC,gBAAgB,GAAG,sDAAsD;;EAE/E;EACAC,EAAE,CAACC,KAAK,CAACH,YAAY,EAAE,CAACF,eAAe,CAAC,EAAE,CAACM,GAAG,EAAEC,cAAc,KAAK;IACjE,IAAID,GAAG,EAAE;MACPE,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEH,GAAG,CAAC,CAAC,CAAC;MAC3DP,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,qCAAqC,CAAC;MAC3D;IACF;IAEA,IAAIJ,cAAc,CAACK,MAAM,KAAK,CAAC,EAAE;MAC/Bb,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;MAC5C;IACF;IAEAP,EAAE,CAACC,KAAK,CAACF,gBAAgB,EAAE,CAACH,eAAe,CAAC,EAAE,CAACM,GAAG,EAAEO,kBAAkB,KAAK;MACzE,IAAIP,GAAG,EAAE;QACPE,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEH,GAAG,CAAC,CAAC,CAAC;QAC/DP,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,yCAAyC,CAAC;QAC/D;MACF;MAEAZ,GAAG,CAACe,IAAI,CAAC;QACPC,OAAO,EAAER,cAAc,CAAC,CAAC,CAAC;QAAE;QAC5BS,YAAY,EAAEH,kBAAkB,CAAE;MACpC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}