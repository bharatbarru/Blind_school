{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\bschool1\\\\frontend\\\\src\\\\components\\\\PersonDetailsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Card, CardContent, Typography } from '@mui/material';\n\n// function PersonDetailsPage() {\n//   const { id } = useParams(); // Get the ID from the URL\n//   const [person, setPerson] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPerson = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\n//         if (response.ok) {\n//           const data = await response.json();\n//           setPerson(data);\n//           setError(null);\n//         } else {\n//           setError('Person not found');\n//         }\n//       } catch (error) {\n//         setError('Failed to retrieve person data.');\n//       }\n//     };\n\n//     fetchPerson(); // Fetch person data when component mounts\n//   }, [id]);\n\n//   if (error) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\" color=\"error\">\n//             {error}\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   if (!person) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\">\n//             Loading...\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   return (\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\n//       <CardContent>\n//         <center><Typography variant=\"h5\" gutterBottom>\n//           Person Details\n//         </Typography></center>\n//         <Typography>Name: {person.fullName}</Typography>\n//         <Typography>Age: {person.age}</Typography>\n//         <Typography>Email: {person.email}</Typography>\n//         <Typography>Father's Name: {person.fatherName}</Typography>\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\n//         <Typography>Mother's Name: {person.motherName}</Typography>\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\n//         <Typography>Caste: {person.caste}</Typography>\n//         <Typography>Religion: {person.religion}</Typography>\n//         <Typography>Address: {person.address}</Typography>\n//         <Typography>City: {person.city}</Typography>\n//         <Typography>State: {person.state}</Typography>\n//         <Typography>Country: {person.country}</Typography>\n//         <Typography>Pincode: {person.pincode}</Typography>\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\n//         <Typography>TC Number: {person.tcNumber}</Typography>\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\n//       </CardContent>\n//     </Card>\n//   );\n// }\n\n// export default PersonDetailsPage;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, Typography, Button } from '@mui/material'; // Import Button for print action\nimport { useRef } from 'react'; // Import useRef to target the section to print\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PersonDetailsPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the ID from the URL\n  const [person, setPerson] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use useRef to refer to the part of the component to print\n  const printRef = useRef(null);\n  const handlePrint = () => {\n    if (printRef.current) {\n      // This triggers the print dialog for the referenced part\n      const printContents = printRef.current.innerHTML; // Get the inner HTML of the part to print\n      const originalContents = document.body.innerHTML; // Save the original content of the page\n\n      document.body.innerHTML = printContents; // Set the body content to the part to print\n      window.print(); // Trigger the print action\n      document.body.innerHTML = originalContents; // Restore the original content\n    }\n  };\n  useEffect(() => {\n    const fetchPerson = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/get-person/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          setPerson(data);\n          setError(null);\n        } else {\n          setError('Person not found');\n        }\n      } catch (error) {\n        setError('Failed to retrieve person data.');\n      }\n    };\n    fetchPerson(); // Fetch person data when component mounts\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        margin: '0 auto',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n  if (!person) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        margin: '0 auto',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        margin: '0 auto',\n        marginTop: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        ref: printRef,\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Person Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Name: \", person.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Age: \", person.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Email: \", person.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Father's Name: \", person.fatherName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Father's Occupation: \", person.fatherOccupation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Mother's Name: \", person.motherName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Mother's Occupation: \", person.motherOccupation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Ration Card Number: \", person.rationCardNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Phone Number: \", person.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Caste: \", person.caste]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Religion: \", person.religion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Address: \", person.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"City: \", person.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"State: \", person.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Country: \", person.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Pincode: \", person.pincode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Guardian's Name: \", person.guardianName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Guardian's Address: \", person.guardianAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Previous School Name: \", person.previousSchoolName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Last Studied City: \", person.lastStudiedCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Last Studied State: \", person.lastStudiedState]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"TC Number: \", person.tcNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Year of Study: \", person.yearOfStudy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Identification Marks: \", person.identificationMarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handlePrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(PersonDetailsPage, \"IZpvwfYD5+jhSoFBp2a/4EEo9+Y=\", false, function () {\n  return [useParams];\n});\n_c = PersonDetailsPage;\nexport default PersonDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"PersonDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","CardContent","Typography","Button","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonDetailsPage","_s","id","person","setPerson","error","setError","printRef","handlePrint","current","printContents","innerHTML","originalContents","document","body","window","print","fetchPerson","response","fetch","ok","data","json","sx","maxWidth","margin","marginTop","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","gutterBottom","fullName","age","email","fatherName","fatherOccupation","motherName","motherOccupation","rationCardNumber","phoneNumber","caste","religion","address","city","state","country","pincode","guardianName","guardianAddress","previousSchoolName","lastStudiedCity","lastStudiedState","tcNumber","yearOfStudy","identificationMarks","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/bschool1/frontend/src/components/PersonDetailsPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { Card, CardContent, Typography } from '@mui/material';\r\n\r\n// function PersonDetailsPage() {\r\n//   const { id } = useParams(); // Get the ID from the URL\r\n//   const [person, setPerson] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPerson = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n//         if (response.ok) {\r\n//           const data = await response.json();\r\n//           setPerson(data);\r\n//           setError(null);\r\n//         } else {\r\n//           setError('Person not found');\r\n//         }\r\n//       } catch (error) {\r\n//         setError('Failed to retrieve person data.');\r\n//       }\r\n//     };\r\n\r\n//     fetchPerson(); // Fetch person data when component mounts\r\n//   }, [id]);\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\" color=\"error\">\r\n//             {error}\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   if (!person) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\">\r\n//             Loading...\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\r\n//       <CardContent>\r\n//         <center><Typography variant=\"h5\" gutterBottom>\r\n//           Person Details\r\n//         </Typography></center>\r\n//         <Typography>Name: {person.fullName}</Typography>\r\n//         <Typography>Age: {person.age}</Typography>\r\n//         <Typography>Email: {person.email}</Typography>\r\n//         <Typography>Father's Name: {person.fatherName}</Typography>\r\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\r\n//         <Typography>Mother's Name: {person.motherName}</Typography>\r\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\r\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\r\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\r\n//         <Typography>Caste: {person.caste}</Typography>\r\n//         <Typography>Religion: {person.religion}</Typography>\r\n//         <Typography>Address: {person.address}</Typography>\r\n//         <Typography>City: {person.city}</Typography>\r\n//         <Typography>State: {person.state}</Typography>\r\n//         <Typography>Country: {person.country}</Typography>\r\n//         <Typography>Pincode: {person.pincode}</Typography>\r\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\r\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\r\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\r\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\r\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\r\n//         <Typography>TC Number: {person.tcNumber}</Typography>\r\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\r\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default PersonDetailsPage;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, CardContent, Typography, Button } from '@mui/material'; // Import Button for print action\r\nimport { useRef } from 'react'; // Import useRef to target the section to print\r\n\r\nfunction PersonDetailsPage() {\r\n  const { id } = useParams(); // Get the ID from the URL\r\n  const [person, setPerson] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Use useRef to refer to the part of the component to print\r\n  const printRef = useRef(null);\r\n\r\n  const handlePrint = () => {\r\n    if (printRef.current) {\r\n      // This triggers the print dialog for the referenced part\r\n      const printContents = printRef.current.innerHTML; // Get the inner HTML of the part to print\r\n      const originalContents = document.body.innerHTML; // Save the original content of the page\r\n\r\n      document.body.innerHTML = printContents; // Set the body content to the part to print\r\n      window.print(); // Trigger the print action\r\n      document.body.innerHTML = originalContents; // Restore the original content\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPerson = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPerson(data);\r\n          setError(null);\r\n        } else {\r\n          setError('Person not found');\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to retrieve person data.');\r\n      }\r\n    };\r\n\r\n    fetchPerson(); // Fetch person data when component mounts\r\n  }, [id]);\r\n\r\n  if (error) {\r\n    return (\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\" color=\"error\">\r\n            {error}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (!person) {\r\n    return (\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\">\r\n            Loading...\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (<>\r\n    <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\r\n      <CardContent ref={printRef}>\r\n        <center><Typography variant=\"h5\" gutterBottom>\r\n          Person Details\r\n        </Typography></center>\r\n        <Typography>Name: {person.fullName}</Typography>\r\n        <Typography>Age: {person.age}</Typography>\r\n        <Typography>Email: {person.email}</Typography>\r\n        <Typography>Father's Name: {person.fatherName}</Typography>\r\n        <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\r\n        <Typography>Mother's Name: {person.motherName}</Typography>\r\n        <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\r\n        <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\r\n        <Typography>Phone Number: {person.phoneNumber}</Typography>\r\n        <Typography>Caste: {person.caste}</Typography>\r\n        <Typography>Religion: {person.religion}</Typography>\r\n        <Typography>Address: {person.address}</Typography>\r\n        <Typography>City: {person.city}</Typography>\r\n        <Typography>State: {person.state}</Typography>\r\n        <Typography>Country: {person.country}</Typography>\r\n        <Typography>Pincode: {person.pincode}</Typography>\r\n        <Typography>Guardian's Name: {person.guardianName}</Typography>\r\n        <Typography>Guardian's Address: {person.guardianAddress}</Typography>\r\n        <Typography>Previous School Name: {person.previousSchoolName}</Typography>\r\n        <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\r\n        <Typography>Last Studied State: {person.lastStudiedState}</Typography>\r\n        <Typography>TC Number: {person.tcNumber}</Typography>\r\n        <Typography>Year of Study: {person.yearOfStudy}</Typography>\r\n        <Typography>Identification Marks: {person.identificationMarks}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n    <center><Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\r\n    Print\r\n  </Button></center>\r\n  </>);\r\n}\r\n\r\nexport default PersonDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}