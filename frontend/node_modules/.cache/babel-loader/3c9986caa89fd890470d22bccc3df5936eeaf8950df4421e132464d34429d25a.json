{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\bschool1\\\\frontend\\\\src\\\\components\\\\PersonDetailsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Card, CardContent, Typography } from '@mui/material';\n\n// function PersonDetailsPage() {\n//   const { id } = useParams(); // Get the ID from the URL\n//   const [person, setPerson] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPerson = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\n//         if (response.ok) {\n//           const data = await response.json();\n//           setPerson(data);\n//           setError(null);\n//         } else {\n//           setError('Person not found');\n//         }\n//       } catch (error) {\n//         setError('Failed to retrieve person data.');\n//       }\n//     };\n\n//     fetchPerson(); // Fetch person data when component mounts\n//   }, [id]);\n\n//   if (error) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\" color=\"error\">\n//             {error}\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   if (!person) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\">\n//             Loading...\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   return (\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\n//       <CardContent>\n//         <center><Typography variant=\"h5\" gutterBottom>\n//           Person Details\n//         </Typography></center>\n//         <Typography>Name: {person.fullName}</Typography>\n//         <Typography>Age: {person.age}</Typography>\n//         <Typography>Email: {person.email}</Typography>\n//         <Typography>Father's Name: {person.fatherName}</Typography>\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\n//         <Typography>Mother's Name: {person.motherName}</Typography>\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\n//         <Typography>Caste: {person.caste}</Typography>\n//         <Typography>Religion: {person.religion}</Typography>\n//         <Typography>Address: {person.address}</Typography>\n//         <Typography>City: {person.city}</Typography>\n//         <Typography>State: {person.state}</Typography>\n//         <Typography>Country: {person.country}</Typography>\n//         <Typography>Pincode: {person.pincode}</Typography>\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\n//         <Typography>TC Number: {person.tcNumber}</Typography>\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\n//       </CardContent>\n//     </Card>\n//   );\n// }\n\n// export default PersonDetailsPage;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Card, CardContent, Typography, Button } from '@mui/material'; // Import Button for print action\n// import { useRef } from 'react'; // Import useRef to target the section to print\n\n// function PersonDetailsPage() {\n//   const { id } = useParams(); // Get the ID from the URL\n//   const [person, setPerson] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   // Use useRef to refer to the part of the component to print\n//   const printRef = useRef(null);\n\n//   const handlePrint = () => {\n//     if (printRef.current) {\n//       // This triggers the print dialog for the referenced part\n//       const printContents = printRef.current.innerHTML; // Get the inner HTML of the part to print\n//       const originalContents = document.body.innerHTML; // Save the original content of the page\n\n//       document.body.innerHTML = printContents; // Set the body content to the part to print\n//       window.print(); // Trigger the print action\n//       document.body.innerHTML = originalContents; // Restore the original content\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchPerson = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\n//         if (response.ok) {\n//           const data = await response.json();\n//           setPerson(data);\n//           setError(null);\n//         } else {\n//           setError('Person not found');\n//         }\n//       } catch (error) {\n//         setError('Failed to retrieve person data.');\n//       }\n//     };\n\n//     fetchPerson(); // Fetch person data when component mounts\n//   }, [id]);\n\n//   if (error) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\" color=\"error\">\n//             {error}\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   if (!person) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\">\n//             Loading...\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n\n//   return (<>\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\n//       <CardContent ref={printRef}>\n//         <center><Typography variant=\"h5\" gutterBottom>\n//           Person Details\n//         </Typography></center>\n//         <Typography>Name: {person.fullName}</Typography>\n//         <Typography>Age: {person.age}</Typography>\n//         <Typography>Email: {person.email}</Typography>\n//         <Typography>Father's Name: {person.fatherName}</Typography>\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\n//         <Typography>Mother's Name: {person.motherName}</Typography>\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\n//         <Typography>Caste: {person.caste}</Typography>\n//         <Typography>Religion: {person.religion}</Typography>\n//         <Typography>Address: {person.address}</Typography>\n//         <Typography>City: {person.city}</Typography>\n//         <Typography>State: {person.state}</Typography>\n//         <Typography>Country: {person.country}</Typography>\n//         <Typography>Pincode: {person.pincode}</Typography>\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\n//         <Typography>TC Number: {person.tcNumber}</Typography>\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\n//       </CardContent>\n//     </Card>\n//     <center><Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\n//     Print\n//   </Button></center>\n//   </>);\n// }\n\n// export default PersonDetailsPage;\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, Typography, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonDetailsPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [person, setPerson] = useState(null);\n  const [error, setError] = useState(null);\n  const printRef = useRef(null); // Reference for the section to print\n\n  const fetchPersonData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/get-person/${id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPerson(data);\n        setError(null);\n      } else {\n        setError('Person not found');\n      }\n    } catch (error) {\n      setError('Failed to retrieve person data. Please try again later.');\n    }\n  };\n  const handlePrint = () => {\n    if (printRef.current) {\n      const printContents = printRef.current.innerHTML;\n      const originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print(); // Trigger the print action\n      document.body.innerHTML = originalContents; // Restore original content\n    }\n  };\n  useEffect(() => {\n    fetchPersonData(); // Fetch person data when component mounts\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        margin: '0 auto',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }\n  if (!person) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        margin: '0 auto',\n        marginTop: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        margin: '0 auto',\n        marginTop: 10\n      },\n      ref: printRef,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Person Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Name: \", person.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Age: \", person.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Email: \", person.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Father's Name: \", person.fatherName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Father's Occupation: \", person.fatherOccupation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Mother's Name: \", person.motherName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Mother's Occupation: \", person.motherOccupation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Phone Number: \", person.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Address: \", person.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"City: \", person.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"State: \", person.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Country: \", person.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Pincode: \", person.pincode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Guardian's Name: \", person.guardianName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Guardian's Address: \", person.guardianAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Previous School Name: \", person.previousSchoolName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Last Studied City: \", person.lastStudiedCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Last Studied State: \", person.lastStudiedState]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"TC Number: \", person.tcNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Year of Study: \", person.yearOfStudy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Identification Marks: \", person.identificationMarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handlePrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonDetailsPage, \"IZpvwfYD5+jhSoFBp2a/4EEo9+Y=\", false, function () {\n  return [useParams];\n});\n_c = PersonDetailsPage;\nexport default PersonDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"PersonDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","Card","CardContent","Typography","Button","jsxDEV","_jsxDEV","PersonDetailsPage","_s","id","person","setPerson","error","setError","printRef","fetchPersonData","response","fetch","ok","data","json","handlePrint","current","printContents","innerHTML","originalContents","document","body","window","print","sx","maxWidth","margin","marginTop","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","gutterBottom","fullName","age","email","fatherName","fatherOccupation","motherName","motherOccupation","phoneNumber","address","city","state","country","pincode","guardianName","guardianAddress","previousSchoolName","lastStudiedCity","lastStudiedState","tcNumber","yearOfStudy","identificationMarks","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/bschool1/frontend/src/components/PersonDetailsPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { Card, CardContent, Typography } from '@mui/material';\r\n\r\n// function PersonDetailsPage() {\r\n//   const { id } = useParams(); // Get the ID from the URL\r\n//   const [person, setPerson] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPerson = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n//         if (response.ok) {\r\n//           const data = await response.json();\r\n//           setPerson(data);\r\n//           setError(null);\r\n//         } else {\r\n//           setError('Person not found');\r\n//         }\r\n//       } catch (error) {\r\n//         setError('Failed to retrieve person data.');\r\n//       }\r\n//     };\r\n\r\n//     fetchPerson(); // Fetch person data when component mounts\r\n//   }, [id]);\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\" color=\"error\">\r\n//             {error}\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   if (!person) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\">\r\n//             Loading...\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\r\n//       <CardContent>\r\n//         <center><Typography variant=\"h5\" gutterBottom>\r\n//           Person Details\r\n//         </Typography></center>\r\n//         <Typography>Name: {person.fullName}</Typography>\r\n//         <Typography>Age: {person.age}</Typography>\r\n//         <Typography>Email: {person.email}</Typography>\r\n//         <Typography>Father's Name: {person.fatherName}</Typography>\r\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\r\n//         <Typography>Mother's Name: {person.motherName}</Typography>\r\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\r\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\r\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\r\n//         <Typography>Caste: {person.caste}</Typography>\r\n//         <Typography>Religion: {person.religion}</Typography>\r\n//         <Typography>Address: {person.address}</Typography>\r\n//         <Typography>City: {person.city}</Typography>\r\n//         <Typography>State: {person.state}</Typography>\r\n//         <Typography>Country: {person.country}</Typography>\r\n//         <Typography>Pincode: {person.pincode}</Typography>\r\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\r\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\r\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\r\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\r\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\r\n//         <Typography>TC Number: {person.tcNumber}</Typography>\r\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\r\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default PersonDetailsPage;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { Card, CardContent, Typography, Button } from '@mui/material'; // Import Button for print action\r\n// import { useRef } from 'react'; // Import useRef to target the section to print\r\n\r\n// function PersonDetailsPage() {\r\n//   const { id } = useParams(); // Get the ID from the URL\r\n//   const [person, setPerson] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Use useRef to refer to the part of the component to print\r\n//   const printRef = useRef(null);\r\n\r\n//   const handlePrint = () => {\r\n//     if (printRef.current) {\r\n//       // This triggers the print dialog for the referenced part\r\n//       const printContents = printRef.current.innerHTML; // Get the inner HTML of the part to print\r\n//       const originalContents = document.body.innerHTML; // Save the original content of the page\r\n\r\n//       document.body.innerHTML = printContents; // Set the body content to the part to print\r\n//       window.print(); // Trigger the print action\r\n//       document.body.innerHTML = originalContents; // Restore the original content\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchPerson = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n//         if (response.ok) {\r\n//           const data = await response.json();\r\n//           setPerson(data);\r\n//           setError(null);\r\n//         } else {\r\n//           setError('Person not found');\r\n//         }\r\n//       } catch (error) {\r\n//         setError('Failed to retrieve person data.');\r\n//       }\r\n//     };\r\n\r\n//     fetchPerson(); // Fetch person data when component mounts\r\n//   }, [id]);\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\" color=\"error\">\r\n//             {error}\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   if (!person) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\">\r\n//             Loading...\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   return (<>\r\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\r\n//       <CardContent ref={printRef}>\r\n//         <center><Typography variant=\"h5\" gutterBottom>\r\n//           Person Details\r\n//         </Typography></center>\r\n//         <Typography>Name: {person.fullName}</Typography>\r\n//         <Typography>Age: {person.age}</Typography>\r\n//         <Typography>Email: {person.email}</Typography>\r\n//         <Typography>Father's Name: {person.fatherName}</Typography>\r\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\r\n//         <Typography>Mother's Name: {person.motherName}</Typography>\r\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\r\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\r\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\r\n//         <Typography>Caste: {person.caste}</Typography>\r\n//         <Typography>Religion: {person.religion}</Typography>\r\n//         <Typography>Address: {person.address}</Typography>\r\n//         <Typography>City: {person.city}</Typography>\r\n//         <Typography>State: {person.state}</Typography>\r\n//         <Typography>Country: {person.country}</Typography>\r\n//         <Typography>Pincode: {person.pincode}</Typography>\r\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\r\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\r\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\r\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\r\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\r\n//         <Typography>TC Number: {person.tcNumber}</Typography>\r\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\r\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\r\n//       </CardContent>\r\n//     </Card>\r\n//     <center><Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\r\n//     Print\r\n//   </Button></center>\r\n//   </>);\r\n// }\r\n\r\n// export default PersonDetailsPage;\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, CardContent, Typography, Button } from '@mui/material';\r\n\r\nfunction PersonDetailsPage() {\r\n  const { id } = useParams();\r\n  const [person, setPerson] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const printRef = useRef(null); // Reference for the section to print\r\n\r\n  const fetchPersonData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPerson(data);\r\n        setError(null);\r\n      } else {\r\n        setError('Person not found');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to retrieve person data. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    if (printRef.current) {\r\n      const printContents = printRef.current.innerHTML;\r\n      const originalContents = document.body.innerHTML;\r\n      document.body.innerHTML = printContents;\r\n      window.print(); // Trigger the print action\r\n      document.body.innerHTML = originalContents; // Restore original content\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPersonData(); // Fetch person data when component mounts\r\n  }, [id]);\r\n\r\n  if (error) {\r\n    return (\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\" color=\"error\">\r\n            {error}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (!person) {\r\n    return (\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\">Loading...</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }} ref={printRef}>\r\n        <CardContent>\r\n          <center>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Person Details\r\n            </Typography>\r\n          </center>\r\n          <Typography variant=\"body1\">Name: {person.fullName}</Typography>\r\n          <Typography variant=\"body1\">Age: {person.age}</Typography>\r\n          <Typography variant=\"body1\">Email: {person.email}</Typography>\r\n          <Typography variant=\"body1\">\r\n            Father's Name: {person.fatherName}\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            Father's Occupation: {person.fatherOccupation}\r\n          </Typography>\r\n          <Typography variant=\"body1\">Mother's Name: {person.motherName}</Typography>\r\n          <Typography variant=\"body1\">\r\n            Mother's Occupation: {person.motherOccupation}\r\n          </Typography>\r\n          <Typography variant=\"body1\">Phone Number: {person.phoneNumber}</Typography>\r\n          <Typography variant=\"body1\">Address: {person.address}</Typography>\r\n          <Typography variant=\"body1\">City: {person.city}</Typography>\r\n          <Typography variant=\"body1\">State: {person.state}</Typography>\r\n          <Typography variant=\"body1\">Country: {person.country}</Typography>\r\n          <Typography variant=\"body1\">Pincode: {person.pincode}</Typography>\r\n          <Typography variant=\"body1\">Guardian's Name: {person.guardianName}</Typography>\r\n          <Typography variant=\"body1\">Guardian's Address: {person.guardianAddress}</Typography>\r\n          <Typography variant=\"body1\">Previous School Name: {person.previousSchoolName}</Typography>\r\n          <Typography variant=\"body1\">Last Studied City: {person.lastStudiedCity}</Typography>\r\n          <Typography variant=\"body1\">Last Studied State: {person.lastStudiedState}</Typography>\r\n          <Typography variant=\"body1\">TC Number: {person.tcNumber}</Typography>\r\n          <Typography variant=\"body1\">Year of Study: {person.yearOfStudy}</Typography>\r\n          <Typography variant=\"body1\">Identification Marks: {person.identificationMarks}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <center>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\r\n          Print\r\n        </Button>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonDetailsPage;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,MAAM,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}