{"ast":null,"code":"import React,{useState}from'react';import{Box,FormControl,Input,Button,Typography}from'@mui/material';import{useNavigate}from'react-router-dom';// Import useNavigate from React Router\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const navigate=useNavigate();// Initialize useNavigate\nconst handleLogin=()=>{// Check if the login credentials match\nif(username==='admin'&&password==='admin'){// Redirect to the dashboard page\nnavigate('/dashboard');}else{// Handle invalid login\nalert(\"wrong credentials\");}};return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'},children:/*#__PURE__*/_jsxs(Box,{sx:{width:300,p:2,border:'1px solid #ccc',borderRadius:4,textAlign:'center',backgroundColor:''},children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{my:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",textTransform:\"capitalize\",sx:{my:2},children:\"Login form\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)})]}),/*#__PURE__*/_jsx(FormControl,{fullWidth:true,sx:{my:1},children:/*#__PURE__*/_jsx(Input,{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,sx:{my:1,backgroundColor:\"#7FC7D9\"},onClick:handleLogin// Call handleLogin function on button click\n,children:\"Login\"})]})});};export default LoginForm;","map":{"version":3,"names":["React","useState","Box","FormControl","Input","Button","Typography","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginForm","username","setUsername","password","setPassword","navigate","handleLogin","alert","sx","display","justifyContent","alignItems","height","children","width","p","border","borderRadius","textAlign","backgroundColor","fullWidth","my","variant","textTransform","placeholder","value","onChange","e","target","type","onClick"],"sources":["C:/Users/DELL/OneDrive/Desktop/bschool1/frontend/src/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, FormControl, Input, Button, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from React Router\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  const handleLogin = () => {\r\n    // Check if the login credentials match\r\n    if (username === 'admin' && password === 'admin') {\r\n      // Redirect to the dashboard page\r\n      navigate('/dashboard');\r\n    } else {\r\n      // Handle invalid login\r\n      alert(\"wrong credentials\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: 300,\r\n          p: 2,\r\n          border: '1px solid #ccc',\r\n          borderRadius: 4,\r\n          textAlign: 'center',\r\n          backgroundColor: ''\r\n        }}\r\n      >\r\n        <FormControl fullWidth sx={{ my: 1 }}>\r\n          <Typography variant='h6' textTransform={\"capitalize\"} sx={{ my: 2 }}>Login form</Typography>\r\n          <Input\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth sx={{ my: 1 }}>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          sx={{ my: 1, backgroundColor: \"#7FC7D9\" }}\r\n          onClick={handleLogin} // Call handleLogin function on button click\r\n        >\r\n          Login\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,GAAG,CAAEC,WAAW,CAAEC,KAAK,CAAEC,MAAM,CAAEC,UAAU,KAAQ,eAAe,CAC3E,OAASC,WAAW,KAAQ,kBAAkB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAgB,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAAE;AAEhC,KAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CACxB;AACA,GAAIL,QAAQ,GAAK,OAAO,EAAIE,QAAQ,GAAK,OAAO,CAAE,CAChD;AACAE,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,IAAM,CACL;AACAE,KAAK,CAAC,mBAAmB,CAAC,CAC5B,CACF,CAAC,CAED,mBACEV,IAAA,CAACP,GAAG,EACFkB,EAAE,CAAE,CACFC,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,MAAM,CAAE,OACV,CAAE,CAAAC,QAAA,cAEFd,KAAA,CAACT,GAAG,EACFkB,EAAE,CAAE,CACFM,KAAK,CAAE,GAAG,CACVC,CAAC,CAAE,CAAC,CACJC,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAE,CAAC,CACfC,SAAS,CAAE,QAAQ,CACnBC,eAAe,CAAE,EACnB,CAAE,CAAAN,QAAA,eAEFd,KAAA,CAACR,WAAW,EAAC6B,SAAS,MAACZ,EAAE,CAAE,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAAR,QAAA,eACnChB,IAAA,CAACH,UAAU,EAAC4B,OAAO,CAAC,IAAI,CAACC,aAAa,CAAE,YAAa,CAACf,EAAE,CAAE,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAAR,QAAA,CAAC,YAAU,CAAY,CAAC,cAC5FhB,IAAA,CAACL,KAAK,EACJgC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAExB,QAAS,CAChByB,QAAQ,CAAGC,CAAC,EAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,EACS,CAAC,cACd5B,IAAA,CAACN,WAAW,EAAC6B,SAAS,MAACZ,EAAE,CAAE,CAAEa,EAAE,CAAE,CAAE,CAAE,CAAAR,QAAA,cACnChB,IAAA,CAACL,KAAK,EACJqC,IAAI,CAAC,UAAU,CACfL,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEtB,QAAS,CAChBuB,QAAQ,CAAGC,CAAC,EAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,CACS,CAAC,cAEd5B,IAAA,CAACJ,MAAM,EACL6B,OAAO,CAAC,WAAW,CACnBF,SAAS,MACTZ,EAAE,CAAE,CAAEa,EAAE,CAAE,CAAC,CAAEF,eAAe,CAAE,SAAU,CAAE,CAC1CW,OAAO,CAAExB,WAAa;AAAA,CAAAO,QAAA,CACvB,OAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}