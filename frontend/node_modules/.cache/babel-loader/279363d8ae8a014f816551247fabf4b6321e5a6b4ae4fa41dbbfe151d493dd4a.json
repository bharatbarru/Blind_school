{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Card, CardContent, Typography } from '@mui/material';\n// function PersonDetailsPage() {\n//   const { id } = useParams(); // Get the ID from the URL\n//   const [person, setPerson] = useState(null);\n//   const [error, setError] = useState(null);\n//   useEffect(() => {\n//     const fetchPerson = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\n//         if (response.ok) {\n//           const data = await response.json();\n//           setPerson(data);\n//           setError(null);\n//         } else {\n//           setError('Person not found');\n//         }\n//       } catch (error) {\n//         setError('Failed to retrieve person data.');\n//       }\n//     };\n//     fetchPerson(); // Fetch person data when component mounts\n//   }, [id]);\n//   if (error) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\" color=\"error\">\n//             {error}\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n//   if (!person) {\n//     return (\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\n//         <CardContent>\n//           <Typography variant=\"body1\">\n//             Loading...\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     );\n//   }\n//   return (\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\n//       <CardContent>\n//         <center><Typography variant=\"h5\" gutterBottom>\n//           Person Details\n//         </Typography></center>\n//         <Typography>Name: {person.fullName}</Typography>\n//         <Typography>Age: {person.age}</Typography>\n//         <Typography>Email: {person.email}</Typography>\n//         <Typography>Father's Name: {person.fatherName}</Typography>\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\n//         <Typography>Mother's Name: {person.motherName}</Typography>\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\n//         <Typography>Caste: {person.caste}</Typography>\n//         <Typography>Religion: {person.religion}</Typography>\n//         <Typography>Address: {person.address}</Typography>\n//         <Typography>City: {person.city}</Typography>\n//         <Typography>State: {person.state}</Typography>\n//         <Typography>Country: {person.country}</Typography>\n//         <Typography>Pincode: {person.pincode}</Typography>\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\n//         <Typography>TC Number: {person.tcNumber}</Typography>\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\n//       </CardContent>\n//     </Card>\n//   );\n// }\n// export default PersonDetailsPage;\nimport React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import{Card,CardContent,Typography,Button}from'@mui/material';// Import Button for print action\nimport{useRef}from'react';// Import useRef to target the section to print\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function PersonDetailsPage(){const{id}=useParams();// Get the ID from the URL\nconst[person,setPerson]=useState(null);const[error,setError]=useState(null);// Use useRef to refer to the part of the component to print\nconst printRef=useRef(null);const handlePrint=()=>{if(printRef.current){// This triggers the print dialog for the referenced part\nconst printContents=printRef.current.innerHTML;// Get the inner HTML of the part to print\nconst originalContents=document.body.innerHTML;// Save the original content of the page\ndocument.body.innerHTML=printContents;// Set the body content to the part to print\nwindow.print();// Trigger the print action\ndocument.body.innerHTML=originalContents;// Restore the original content\n}};useEffect(()=>{const fetchPerson=async()=>{try{const response=await fetch(\"http://localhost:5000/get-person/\".concat(id));if(response.ok){const data=await response.json();setPerson(data);setError(null);}else{setError('Person not found');}}catch(error){setError('Failed to retrieve person data.');}};fetchPerson();// Fetch person data when component mounts\n},[id]);if(error){return/*#__PURE__*/_jsx(Card,{sx:{maxWidth:600,margin:'0 auto',marginTop:10},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"error\",children:error})})});}if(!person){return/*#__PURE__*/_jsx(Card,{sx:{maxWidth:600,margin:'0 auto',marginTop:10},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Loading...\"})})});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{sx:{maxWidth:600,margin:'0 auto',marginTop:5},children:/*#__PURE__*/_jsxs(CardContent,{ref:printRef,children:[/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Person Details\"})}),/*#__PURE__*/_jsxs(Typography,{children:[\"Name: \",person.fullName]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Age: \",person.age]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Email: \",person.email]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Father's Name: \",person.fatherName]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Father's Occupation: \",person.fatherOccupation]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Mother's Name: \",person.motherName]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Mother's Occupation: \",person.motherOccupation]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Ration Card Number: \",person.rationCardNumber]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Phone Number: \",person.phoneNumber]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Caste: \",person.caste]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Religion: \",person.religion]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Address: \",person.address]}),/*#__PURE__*/_jsxs(Typography,{children:[\"City: \",person.city]}),/*#__PURE__*/_jsxs(Typography,{children:[\"State: \",person.state]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Country: \",person.country]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Pincode: \",person.pincode]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Guardian's Name: \",person.guardianName]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Guardian's Address: \",person.guardianAddress]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Previous School Name: \",person.previousSchoolName]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Last Studied City: \",person.lastStudiedCity]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Last Studied State: \",person.lastStudiedState]}),/*#__PURE__*/_jsxs(Typography,{children:[\"TC Number: \",person.tcNumber]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Year of Study: \",person.yearOfStudy]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Identification Marks: \",person.identificationMarks]})]})}),/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handlePrint,children:\"Print\"})})]});}export default PersonDetailsPage;","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","CardContent","Typography","Button","useRef","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PersonDetailsPage","id","person","setPerson","error","setError","printRef","handlePrint","current","printContents","innerHTML","originalContents","document","body","window","print","fetchPerson","response","fetch","concat","ok","data","json","sx","maxWidth","margin","marginTop","children","variant","color","ref","gutterBottom","fullName","age","email","fatherName","fatherOccupation","motherName","motherOccupation","rationCardNumber","phoneNumber","caste","religion","address","city","state","country","pincode","guardianName","guardianAddress","previousSchoolName","lastStudiedCity","lastStudiedState","tcNumber","yearOfStudy","identificationMarks","onClick"],"sources":["C:/Users/DELL/OneDrive/Desktop/bschool1/frontend/src/components/PersonDetailsPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { Card, CardContent, Typography } from '@mui/material';\r\n\r\n// function PersonDetailsPage() {\r\n//   const { id } = useParams(); // Get the ID from the URL\r\n//   const [person, setPerson] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPerson = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n//         if (response.ok) {\r\n//           const data = await response.json();\r\n//           setPerson(data);\r\n//           setError(null);\r\n//         } else {\r\n//           setError('Person not found');\r\n//         }\r\n//       } catch (error) {\r\n//         setError('Failed to retrieve person data.');\r\n//       }\r\n//     };\r\n\r\n//     fetchPerson(); // Fetch person data when component mounts\r\n//   }, [id]);\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\" color=\"error\">\r\n//             {error}\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   if (!person) {\r\n//     return (\r\n//       <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n//         <CardContent>\r\n//           <Typography variant=\"body1\">\r\n//             Loading...\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\r\n//       <CardContent>\r\n//         <center><Typography variant=\"h5\" gutterBottom>\r\n//           Person Details\r\n//         </Typography></center>\r\n//         <Typography>Name: {person.fullName}</Typography>\r\n//         <Typography>Age: {person.age}</Typography>\r\n//         <Typography>Email: {person.email}</Typography>\r\n//         <Typography>Father's Name: {person.fatherName}</Typography>\r\n//         <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\r\n//         <Typography>Mother's Name: {person.motherName}</Typography>\r\n//         <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\r\n//         <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\r\n//         <Typography>Phone Number: {person.phoneNumber}</Typography>\r\n//         <Typography>Caste: {person.caste}</Typography>\r\n//         <Typography>Religion: {person.religion}</Typography>\r\n//         <Typography>Address: {person.address}</Typography>\r\n//         <Typography>City: {person.city}</Typography>\r\n//         <Typography>State: {person.state}</Typography>\r\n//         <Typography>Country: {person.country}</Typography>\r\n//         <Typography>Pincode: {person.pincode}</Typography>\r\n//         <Typography>Guardian's Name: {person.guardianName}</Typography>\r\n//         <Typography>Guardian's Address: {person.guardianAddress}</Typography>\r\n//         <Typography>Previous School Name: {person.previousSchoolName}</Typography>\r\n//         <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\r\n//         <Typography>Last Studied State: {person.lastStudiedState}</Typography>\r\n//         <Typography>TC Number: {person.tcNumber}</Typography>\r\n//         <Typography>Year of Study: {person.yearOfStudy}</Typography>\r\n//         <Typography>Identification Marks: {person.identificationMarks}</Typography>\r\n//       </CardContent>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n// export default PersonDetailsPage;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, CardContent, Typography, Button } from '@mui/material'; // Import Button for print action\r\nimport { useRef } from 'react'; // Import useRef to target the section to print\r\n\r\nfunction PersonDetailsPage() {\r\n  const { id } = useParams(); // Get the ID from the URL\r\n  const [person, setPerson] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Use useRef to refer to the part of the component to print\r\n  const printRef = useRef(null);\r\n\r\n  const handlePrint = () => {\r\n    if (printRef.current) {\r\n      // This triggers the print dialog for the referenced part\r\n      const printContents = printRef.current.innerHTML; // Get the inner HTML of the part to print\r\n      const originalContents = document.body.innerHTML; // Save the original content of the page\r\n\r\n      document.body.innerHTML = printContents; // Set the body content to the part to print\r\n      window.print(); // Trigger the print action\r\n      document.body.innerHTML = originalContents; // Restore the original content\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPerson = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/get-person/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPerson(data);\r\n          setError(null);\r\n        } else {\r\n          setError('Person not found');\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to retrieve person data.');\r\n      }\r\n    };\r\n\r\n    fetchPerson(); // Fetch person data when component mounts\r\n  }, [id]);\r\n\r\n  if (error) {\r\n    return (\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\" color=\"error\">\r\n            {error}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (!person) {\r\n    return (\r\n      <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 10 }}>\r\n        <CardContent>\r\n          <Typography variant=\"body1\">\r\n            Loading...\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (<>\r\n    <Card sx={{ maxWidth: 600, margin: '0 auto', marginTop: 5 }}>\r\n      <CardContent ref={printRef}>\r\n        <center><Typography variant=\"h5\" gutterBottom>\r\n          Person Details\r\n        </Typography></center>\r\n        <Typography>Name: {person.fullName}</Typography>\r\n        <Typography>Age: {person.age}</Typography>\r\n        <Typography>Email: {person.email}</Typography>\r\n        <Typography>Father's Name: {person.fatherName}</Typography>\r\n        <Typography>Father's Occupation: {person.fatherOccupation}</Typography>\r\n        <Typography>Mother's Name: {person.motherName}</Typography>\r\n        <Typography>Mother's Occupation: {person.motherOccupation}</Typography>\r\n        <Typography>Ration Card Number: {person.rationCardNumber}</Typography>\r\n        <Typography>Phone Number: {person.phoneNumber}</Typography>\r\n        <Typography>Caste: {person.caste}</Typography>\r\n        <Typography>Religion: {person.religion}</Typography>\r\n        <Typography>Address: {person.address}</Typography>\r\n        <Typography>City: {person.city}</Typography>\r\n        <Typography>State: {person.state}</Typography>\r\n        <Typography>Country: {person.country}</Typography>\r\n        <Typography>Pincode: {person.pincode}</Typography>\r\n        <Typography>Guardian's Name: {person.guardianName}</Typography>\r\n        <Typography>Guardian's Address: {person.guardianAddress}</Typography>\r\n        <Typography>Previous School Name: {person.previousSchoolName}</Typography>\r\n        <Typography>Last Studied City: {person.lastStudiedCity}</Typography>\r\n        <Typography>Last Studied State: {person.lastStudiedState}</Typography>\r\n        <Typography>TC Number: {person.tcNumber}</Typography>\r\n        <Typography>Year of Study: {person.yearOfStudy}</Typography>\r\n        <Typography>Identification Marks: {person.identificationMarks}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n    <center><Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\r\n    Print\r\n  </Button></center>\r\n  </>);\r\n}\r\n\r\nexport default PersonDetailsPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}